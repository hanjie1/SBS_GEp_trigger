// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hcal_cluster_hls_Find_cluster (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        prehits_e_address0,
        prehits_e_ce0,
        prehits_e_q0,
        prehits_t_address0,
        prehits_t_ce0,
        prehits_t_q0,
        curhits_e_address0,
        curhits_e_ce0,
        curhits_e_q0,
        curhits_t_address0,
        curhits_t_ce0,
        curhits_t_q0,
        afthits_e_address0,
        afthits_e_ce0,
        afthits_e_q0,
        afthits_t_address0,
        afthits_t_ce0,
        afthits_t_q0,
        hit_dt,
        seed_threshold,
        x,
        y,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] prehits_e_address0;
output   prehits_e_ce0;
input  [12:0] prehits_e_q0;
output  [3:0] prehits_t_address0;
output   prehits_t_ce0;
input  [2:0] prehits_t_q0;
output  [3:0] curhits_e_address0;
output   curhits_e_ce0;
input  [12:0] curhits_e_q0;
output  [3:0] curhits_t_address0;
output   curhits_t_ce0;
input  [2:0] curhits_t_q0;
output  [3:0] afthits_e_address0;
output   afthits_e_ce0;
input  [12:0] afthits_e_q0;
output  [3:0] afthits_t_address0;
output   afthits_t_ce0;
input  [2:0] afthits_t_q0;
input  [2:0] hit_dt;
input  [12:0] seed_threshold;
input  [4:0] x;
input  [3:0] y;
output  [4:0] ap_return_0;
output  [3:0] ap_return_1;
output  [15:0] ap_return_2;
output  [2:0] ap_return_3;
output  [3:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg prehits_e_ce0;
reg prehits_t_ce0;
reg[3:0] curhits_e_address0;
reg curhits_e_ce0;
reg[3:0] curhits_t_address0;
reg curhits_t_ce0;
reg afthits_e_ce0;
reg afthits_t_ce0;
reg[4:0] ap_return_0;
reg[3:0] ap_return_1;
reg[15:0] ap_return_2;
reg[2:0] ap_return_3;
reg[3:0] ap_return_4;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] nhits_V_q1;
reg   [3:0] reg_420;
wire    ap_CS_fsm_state18;
wire   [3:0] nhits_V_q0;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state2;
reg   [12:0] e0_V_reg_673;
wire   [3:0] nhits_V_addr_reg_684;
wire   [0:0] icmp_ln878_fu_426_p2;
reg   [2:0] cc_t_V_reg_690;
wire    ap_CS_fsm_state3;
wire   [3:0] zext_ln208_3_fu_432_p1;
reg   [3:0] zext_ln208_3_reg_698;
wire    ap_CS_fsm_state6;
wire   [15:0] zext_ln208_4_fu_435_p1;
wire   [3:0] t1_V_1_fu_438_p3;
reg   [3:0] t1_V_1_reg_710;
wire   [3:0] zext_ln228_fu_445_p1;
reg   [3:0] zext_ln228_reg_715;
wire   [63:0] zext_ln252_fu_448_p1;
reg   [63:0] zext_ln252_reg_722;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln878_5_fu_453_p2;
reg   [12:0] curhits_e_load_reg_743;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln886_fu_459_p2;
reg   [0:0] icmp_ln886_reg_749;
wire   [0:0] icmp_ln890_fu_492_p2;
reg   [0:0] icmp_ln890_reg_758;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln886_3_fu_497_p2;
reg   [0:0] icmp_ln886_3_reg_762;
reg   [3:0] op_V_addr_reg_766;
wire   [15:0] total_e_V_2_fu_504_p2;
wire    ap_CS_fsm_state10;
reg   [12:0] prehits_e_load_reg_782;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln886_4_fu_510_p2;
reg   [0:0] icmp_ln886_4_reg_788;
wire   [0:0] icmp_ln890_1_fu_525_p2;
reg   [0:0] icmp_ln890_1_reg_797;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln886_5_fu_530_p2;
reg   [0:0] icmp_ln886_5_reg_801;
wire   [3:0] op_V_addr_1_gep_fu_259_p3;
reg   [3:0] op_V_addr_1_reg_805;
wire   [15:0] total_e_V_4_fu_537_p2;
wire    ap_CS_fsm_state13;
reg   [12:0] afthits_e_load_reg_821;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln241_fu_543_p2;
reg   [0:0] icmp_ln241_reg_827;
wire   [0:0] icmp_ln890_2_fu_562_p2;
reg   [0:0] icmp_ln890_2_reg_836;
wire    ap_CS_fsm_state15;
wire   [3:0] op_V_addr_2_gep_fu_292_p3;
reg   [3:0] op_V_addr_2_reg_843;
wire   [0:0] icmp_ln886_6_fu_567_p2;
wire   [15:0] total_e_V_6_fu_574_p2;
wire    ap_CS_fsm_state16;
wire   [3:0] op_V_addr_3_gep_fu_299_p3;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln886_7_fu_580_p2;
reg   [0:0] icmp_ln886_7_reg_859;
wire   [3:0] add_ln691_fu_593_p2;
wire    ap_CS_fsm_state19;
wire   [15:0] select_ln251_fu_605_p3;
wire   [2:0] select_ln251_1_fu_613_p3;
reg   [3:0] nhits_V_address0;
reg    nhits_V_ce0;
reg    nhits_V_we0;
reg   [3:0] nhits_V_d0;
reg   [3:0] nhits_V_address1;
reg    nhits_V_ce1;
reg    nhits_V_we1;
reg   [3:0] nhits_V_d1;
reg   [3:0] nblock_V_reg_306;
reg   [15:0] cc_e_V_reg_318;
reg   [15:0] total_e_V_7_reg_356;
wire   [15:0] ap_phi_mux_total_e_V_3_phi_fu_331_p6;
reg   [15:0] total_e_V_3_reg_328;
wire   [15:0] ap_phi_mux_total_e_V_5_phi_fu_345_p6;
reg   [15:0] total_e_V_5_reg_342;
reg   [15:0] agg_result_e_0_reg_371;
reg   [2:0] agg_result_t_0_reg_385;
reg   [3:0] agg_result_nhits_0_reg_399;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [3:0] grp_fu_413_p2;
wire   [3:0] add_ln208_fu_586_p2;
wire    ap_CS_fsm_state20;
wire   [3:0] zext_ln213_fu_470_p1;
wire   [0:0] icmp_ln878_6_fu_465_p2;
wire   [3:0] sub_ln213_fu_474_p2;
wire   [3:0] sub_ln213_1_fu_479_p2;
wire   [3:0] diff_fu_484_p3;
wire   [15:0] zext_ln208_fu_501_p1;
wire   [3:0] zext_ln213_1_fu_516_p1;
wire   [3:0] diff_1_fu_520_p2;
wire   [15:0] zext_ln208_1_fu_534_p1;
wire   [3:0] t2_V_fu_549_p3;
wire   [3:0] diff_2_fu_557_p2;
wire   [15:0] zext_ln208_2_fu_571_p1;
wire   [0:0] icmp_ln886_2_fu_599_p2;
wire    ap_CS_fsm_state22;
reg   [4:0] ap_return_0_preg;
reg   [3:0] ap_return_1_preg;
reg   [15:0] ap_return_2_preg;
reg   [2:0] ap_return_3_preg;
reg   [3:0] ap_return_4_preg;
reg   [21:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 ap_return_0_preg = 5'd0;
#0 ap_return_1_preg = 4'd0;
#0 ap_return_2_preg = 16'd0;
#0 ap_return_3_preg = 3'd0;
#0 ap_return_4_preg = 4'd0;
end

hcal_cluster_hls_Find_cluster_nhits_V #(
    .DataWidth( 4 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
nhits_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(nhits_V_address0),
    .ce0(nhits_V_ce0),
    .we0(nhits_V_we0),
    .d0(nhits_V_d0),
    .q0(nhits_V_q0),
    .address1(nhits_V_address1),
    .ce1(nhits_V_ce1),
    .we1(nhits_V_we1),
    .d1(nhits_V_d1),
    .q1(nhits_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 5'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_0_preg <= x;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_1_preg <= y;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_2_preg <= agg_result_e_0_reg_371;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 3'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_3_preg <= agg_result_t_0_reg_385;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_return_4_preg <= agg_result_nhits_0_reg_399;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        agg_result_e_0_reg_371 <= select_ln251_fu_605_p3;
    end else if ((((1'b1 == ap_CS_fsm_state15) & ((((icmp_ln886_5_reg_801 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd0)) | ((icmp_ln886_6_fu_567_p2 == 1'd1) & (icmp_ln890_2_fu_562_p2 == 1'd0))) | ((icmp_ln886_3_reg_762 == 1'd1) & (icmp_ln890_reg_758 == 1'd0) & (icmp_ln886_reg_749 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln878_fu_426_p2 == 1'd1)))) begin
        agg_result_e_0_reg_371 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        agg_result_nhits_0_reg_399 <= nhits_V_q0;
    end else if ((((1'b1 == ap_CS_fsm_state15) & ((((icmp_ln886_5_reg_801 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd0)) | ((icmp_ln886_6_fu_567_p2 == 1'd1) & (icmp_ln890_2_fu_562_p2 == 1'd0))) | ((icmp_ln886_3_reg_762 == 1'd1) & (icmp_ln890_reg_758 == 1'd0) & (icmp_ln886_reg_749 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln878_fu_426_p2 == 1'd1)))) begin
        agg_result_nhits_0_reg_399 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        agg_result_t_0_reg_385 <= select_ln251_1_fu_613_p3;
    end else if ((((1'b1 == ap_CS_fsm_state15) & ((((icmp_ln886_5_reg_801 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd0)) | ((icmp_ln886_6_fu_567_p2 == 1'd1) & (icmp_ln890_2_fu_562_p2 == 1'd0))) | ((icmp_ln886_3_reg_762 == 1'd1) & (icmp_ln890_reg_758 == 1'd0) & (icmp_ln886_reg_749 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln878_fu_426_p2 == 1'd1)))) begin
        agg_result_t_0_reg_385 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        cc_e_V_reg_318 <= total_e_V_7_reg_356;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cc_e_V_reg_318 <= zext_ln208_4_fu_435_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        nblock_V_reg_306 <= add_ln691_fu_593_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        nblock_V_reg_306 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_420 <= nhits_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_420 <= nhits_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_fu_492_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln886_fu_459_p2 == 1'd1)))) begin
        total_e_V_3_reg_328 <= cc_e_V_reg_318;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln890_reg_758 == 1'd0) & (icmp_ln886_reg_749 == 1'd0))) begin
        total_e_V_3_reg_328 <= total_e_V_2_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1_fu_525_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        total_e_V_5_reg_342 <= total_e_V_3_reg_328;
    end else if (((icmp_ln886_4_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        total_e_V_5_reg_342 <= ap_phi_mux_total_e_V_3_phi_fu_331_p6;
    end else if (((icmp_ln890_1_reg_797 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        total_e_V_5_reg_342 <= total_e_V_4_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((((((((((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln886_3_reg_762 == 1'd0)) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln886_3_reg_762 == 1'd0))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln886_3_reg_762 == 1'd0))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln886_reg_749 == 1'd1))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln886_reg_749 == 1'd1))) | ((icmp_ln890_2_fu_562_p2 == 1'd1) & (icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln886_reg_749 == 1'd1))))) begin
        total_e_V_7_reg_356 <= total_e_V_5_reg_342;
    end else if (((icmp_ln241_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        total_e_V_7_reg_356 <= ap_phi_mux_total_e_V_5_phi_fu_345_p6;
    end else if (((icmp_ln890_2_reg_836 == 1'd0) & (icmp_ln241_reg_827 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        total_e_V_7_reg_356 <= total_e_V_6_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        afthits_e_load_reg_821 <= afthits_e_q0;
        icmp_ln241_reg_827 <= icmp_ln241_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cc_t_V_reg_690 <= curhits_t_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        curhits_e_load_reg_743 <= curhits_e_q0;
        icmp_ln886_reg_749 <= icmp_ln886_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        e0_V_reg_673 <= curhits_e_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln890_fu_492_p2 == 1'd0))) begin
        icmp_ln886_3_reg_762 <= icmp_ln886_3_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln886_4_reg_788 <= icmp_ln886_4_fu_510_p2;
        prehits_e_load_reg_782 <= prehits_e_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln890_1_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        icmp_ln886_5_reg_801 <= icmp_ln886_5_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        icmp_ln886_7_reg_859 <= icmp_ln886_7_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln890_1_reg_797 <= icmp_ln890_1_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((((((((((icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln886_3_reg_762 == 1'd0)) | ((icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln886_3_reg_762 == 1'd0))) | ((icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln886_3_reg_762 == 1'd0))) | ((icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln886_reg_749 == 1'd1))) | ((icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln886_reg_749 == 1'd1))) | ((icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln886_reg_749 == 1'd1))))) begin
        icmp_ln890_2_reg_836 <= icmp_ln890_2_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln890_reg_758 <= icmp_ln890_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln886_5_fu_530_p2 == 1'd0) & (icmp_ln890_1_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        op_V_addr_1_reg_805 <= zext_ln252_reg_722;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((((((((((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln886_3_reg_762 == 1'd0)) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln886_3_reg_762 == 1'd0))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln886_3_reg_762 == 1'd0))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln890_reg_758 == 1'd1))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln886_5_reg_801 == 1'd0) & (icmp_ln886_reg_749 == 1'd1))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln890_1_reg_797 == 1'd1) & (icmp_ln886_reg_749 == 1'd1))) | ((icmp_ln886_6_fu_567_p2 == 1'd0) & (icmp_ln890_2_fu_562_p2 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd1) & (icmp_ln886_reg_749 == 1'd1))))) begin
        op_V_addr_2_reg_843 <= zext_ln252_reg_722;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln886_3_fu_497_p2 == 1'd0) & (icmp_ln890_fu_492_p2 == 1'd0))) begin
        op_V_addr_reg_766 <= zext_ln252_reg_722;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t1_V_1_reg_710[2 : 0] <= t1_V_1_fu_438_p3[2 : 0];
        zext_ln208_3_reg_698[2 : 0] <= zext_ln208_3_fu_432_p1[2 : 0];
        zext_ln228_reg_715[2 : 0] <= zext_ln228_fu_445_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        zext_ln252_reg_722[3 : 0] <= zext_ln252_fu_448_p1[3 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        afthits_e_ce0 = 1'b1;
    end else begin
        afthits_e_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        afthits_t_ce0 = 1'b1;
    end else begin
        afthits_t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return_0 = x;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return_1 = y;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return_2 = agg_result_e_0_reg_371;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return_3 = agg_result_t_0_reg_385;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_return_4 = agg_result_nhits_0_reg_399;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        curhits_e_address0 = zext_ln252_fu_448_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        curhits_e_address0 = 64'd0;
    end else begin
        curhits_e_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        curhits_e_ce0 = 1'b1;
    end else begin
        curhits_e_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        curhits_t_address0 = zext_ln252_reg_722;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        curhits_t_address0 = 64'd0;
    end else begin
        curhits_t_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        curhits_t_ce0 = 1'b1;
    end else begin
        curhits_t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20))) begin
        nhits_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        nhits_V_address0 = op_V_addr_2_reg_843;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        nhits_V_address0 = op_V_addr_1_reg_805;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        nhits_V_address0 = op_V_addr_reg_766;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        nhits_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        nhits_V_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        nhits_V_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        nhits_V_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        nhits_V_address0 = 64'd1;
    end else begin
        nhits_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        nhits_V_address1 = nhits_V_addr_reg_684;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        nhits_V_address1 = op_V_addr_3_gep_fu_299_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        nhits_V_address1 = op_V_addr_2_gep_fu_292_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        nhits_V_address1 = op_V_addr_1_gep_fu_259_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        nhits_V_address1 = zext_ln252_reg_722;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        nhits_V_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        nhits_V_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        nhits_V_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        nhits_V_address1 = 64'd0;
    end else begin
        nhits_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        nhits_V_ce0 = 1'b1;
    end else begin
        nhits_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        nhits_V_ce1 = 1'b1;
    end else begin
        nhits_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10))) begin
        nhits_V_d0 = grp_fu_413_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        nhits_V_d0 = 4'd0;
    end else begin
        nhits_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        nhits_V_d1 = add_ln208_fu_586_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        nhits_V_d1 = 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        nhits_V_d1 = 4'd1;
    end else begin
        nhits_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln890_2_reg_836 == 1'd0) & (icmp_ln241_reg_827 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln890_1_reg_797 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln890_reg_758 == 1'd0) & (icmp_ln886_reg_749 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln878_fu_426_p2 == 1'd0)))) begin
        nhits_V_we0 = 1'b1;
    end else begin
        nhits_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln886_7_reg_859 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln878_fu_426_p2 == 1'd0)))) begin
        nhits_V_we1 = 1'b1;
    end else begin
        nhits_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        prehits_e_ce0 = 1'b1;
    end else begin
        prehits_e_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        prehits_t_ce0 = 1'b1;
    end else begin
        prehits_t_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln878_fu_426_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln878_5_fu_453_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln886_fu_459_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln886_3_fu_497_p2 == 1'd1) & (icmp_ln890_fu_492_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln886_4_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln886_5_fu_530_p2 == 1'd1) & (icmp_ln890_1_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln241_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((((icmp_ln886_5_reg_801 == 1'd1) & (icmp_ln890_1_reg_797 == 1'd0) & (icmp_ln886_4_reg_788 == 1'd0)) | ((icmp_ln886_6_fu_567_p2 == 1'd1) & (icmp_ln890_2_fu_562_p2 == 1'd0))) | ((icmp_ln886_3_reg_762 == 1'd1) & (icmp_ln890_reg_758 == 1'd0) & (icmp_ln886_reg_749 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln208_fu_586_p2 = (nhits_V_q0 + reg_420);

assign add_ln691_fu_593_p2 = (nblock_V_reg_306 + 4'd1);

assign afthits_e_address0 = zext_ln252_reg_722;

assign afthits_t_address0 = zext_ln252_reg_722;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_total_e_V_3_phi_fu_331_p6 = total_e_V_3_reg_328;

assign ap_phi_mux_total_e_V_5_phi_fu_345_p6 = total_e_V_5_reg_342;

assign diff_1_fu_520_p2 = (t1_V_1_reg_710 - zext_ln213_1_fu_516_p1);

assign diff_2_fu_557_p2 = (t2_V_fu_549_p3 - zext_ln208_3_reg_698);

assign diff_fu_484_p3 = ((icmp_ln878_6_fu_465_p2[0:0] == 1'b1) ? sub_ln213_fu_474_p2 : sub_ln213_1_fu_479_p2);

assign grp_fu_413_p2 = (nhits_V_q1 + 4'd1);

assign icmp_ln241_fu_543_p2 = ((afthits_e_q0 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_453_p2 = ((nblock_V_reg_306 < 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_465_p2 = ((cc_t_V_reg_690 < curhits_t_q0) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_426_p2 = ((curhits_e_q0 < seed_threshold) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_599_p2 = ((nhits_V_q0 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_497_p2 = ((curhits_e_load_reg_743 > e0_V_reg_673) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_510_p2 = ((prehits_e_q0 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_530_p2 = ((prehits_e_load_reg_782 > e0_V_reg_673) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_567_p2 = ((afthits_e_load_reg_821 > e0_V_reg_673) ? 1'b1 : 1'b0);

assign icmp_ln886_7_fu_580_p2 = ((nhits_V_q1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_459_p2 = ((curhits_e_q0 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln890_1_fu_525_p2 = ((diff_1_fu_520_p2 > zext_ln228_reg_715) ? 1'b1 : 1'b0);

assign icmp_ln890_2_fu_562_p2 = ((diff_2_fu_557_p2 > zext_ln228_reg_715) ? 1'b1 : 1'b0);

assign icmp_ln890_fu_492_p2 = ((diff_fu_484_p3 > zext_ln228_reg_715) ? 1'b1 : 1'b0);

assign nhits_V_addr_reg_684 = 64'd0;

assign op_V_addr_1_gep_fu_259_p3 = zext_ln252_reg_722;

assign op_V_addr_2_gep_fu_292_p3 = zext_ln252_reg_722;

assign op_V_addr_3_gep_fu_299_p3 = zext_ln252_reg_722;

assign prehits_e_address0 = zext_ln252_reg_722;

assign prehits_t_address0 = zext_ln252_reg_722;

assign select_ln251_1_fu_613_p3 = ((icmp_ln886_2_fu_599_p2[0:0] == 1'b1) ? 3'd0 : cc_t_V_reg_690);

assign select_ln251_fu_605_p3 = ((icmp_ln886_2_fu_599_p2[0:0] == 1'b1) ? 16'd0 : cc_e_V_reg_318);

assign sub_ln213_1_fu_479_p2 = (zext_ln208_3_reg_698 - zext_ln213_fu_470_p1);

assign sub_ln213_fu_474_p2 = (zext_ln213_fu_470_p1 - zext_ln208_3_reg_698);

assign t1_V_1_fu_438_p3 = {{1'd1}, {cc_t_V_reg_690}};

assign t2_V_fu_549_p3 = {{1'd1}, {afthits_t_q0}};

assign total_e_V_2_fu_504_p2 = (cc_e_V_reg_318 + zext_ln208_fu_501_p1);

assign total_e_V_4_fu_537_p2 = (total_e_V_3_reg_328 + zext_ln208_1_fu_534_p1);

assign total_e_V_6_fu_574_p2 = (total_e_V_5_reg_342 + zext_ln208_2_fu_571_p1);

assign zext_ln208_1_fu_534_p1 = prehits_e_load_reg_782;

assign zext_ln208_2_fu_571_p1 = afthits_e_load_reg_821;

assign zext_ln208_3_fu_432_p1 = cc_t_V_reg_690;

assign zext_ln208_4_fu_435_p1 = e0_V_reg_673;

assign zext_ln208_fu_501_p1 = curhits_e_load_reg_743;

assign zext_ln213_1_fu_516_p1 = prehits_t_q0;

assign zext_ln213_fu_470_p1 = curhits_t_q0;

assign zext_ln228_fu_445_p1 = hit_dt;

assign zext_ln252_fu_448_p1 = nblock_V_reg_306;

always @ (posedge ap_clk) begin
    zext_ln208_3_reg_698[3] <= 1'b0;
    t1_V_1_reg_710[3] <= 1'b1;
    zext_ln228_reg_715[3] <= 1'b0;
    zext_ln252_reg_722[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //hcal_cluster_hls_Find_cluster
