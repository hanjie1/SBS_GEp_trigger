// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hcal_cluster_hls_Find_nearby (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ch,
        pos_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] ch;
input  [2:0] pos_r;
output  [8:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] ap_return;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] block_map_nx_V_address0;
reg    block_map_nx_V_ce0;
wire   [4:0] block_map_nx_V_q0;
reg   [8:0] block_map_ny_V_address0;
reg    block_map_ny_V_ce0;
wire   [3:0] block_map_ny_V_q0;
wire   [3:0] grp_fu_117_p2;
reg   [3:0] reg_145;
wire    ap_CS_fsm_state2;
wire   [4:0] grp_fu_124_p2;
reg   [4:0] reg_150;
wire   [4:0] grp_fu_131_p2;
reg   [4:0] reg_155;
wire   [3:0] grp_fu_138_p2;
reg   [3:0] reg_160;
reg   [4:0] nx_V_reg_185;
reg   [3:0] ny_V_reg_190;
wire    grp_Find_channel_fu_97_ap_start;
wire    grp_Find_channel_fu_97_ap_done;
wire    grp_Find_channel_fu_97_ap_idle;
wire    grp_Find_channel_fu_97_ap_ready;
reg   [4:0] grp_Find_channel_fu_97_nx;
reg   [3:0] grp_Find_channel_fu_97_ny;
wire   [8:0] grp_Find_channel_fu_97_ap_return;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg    grp_Find_channel_fu_97_ap_start_reg;
wire   [63:0] zext_ln534_fu_165_p1;
reg   [8:0] ap_return_preg;
reg   [2:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_Find_channel_fu_97_ap_start_reg = 1'b0;
#0 ap_return_preg = 9'd0;
end

hcal_cluster_hls_Find_channel_block_map_nx_V #(
    .DataWidth( 5 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
block_map_nx_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(block_map_nx_V_address0),
    .ce0(block_map_nx_V_ce0),
    .q0(block_map_nx_V_q0)
);

hcal_cluster_hls_Find_channel_block_map_ny_V #(
    .DataWidth( 4 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
block_map_ny_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(block_map_ny_V_address0),
    .ce0(block_map_ny_V_ce0),
    .q0(block_map_ny_V_q0)
);

hcal_cluster_hls_Find_channel grp_Find_channel_fu_97(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Find_channel_fu_97_ap_start),
    .ap_done(grp_Find_channel_fu_97_ap_done),
    .ap_idle(grp_Find_channel_fu_97_ap_idle),
    .ap_ready(grp_Find_channel_fu_97_ap_ready),
    .nx(grp_Find_channel_fu_97_nx),
    .ny(grp_Find_channel_fu_97_ny),
    .ap_return(grp_Find_channel_fu_97_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 9'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            ap_return_preg <= grp_Find_channel_fu_97_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Find_channel_fu_97_ap_start_reg <= 1'b0;
    end else begin
        if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_Find_channel_fu_97_ap_start_reg <= 1'b1;
        end else if ((grp_Find_channel_fu_97_ap_ready == 1'b1)) begin
            grp_Find_channel_fu_97_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        nx_V_reg_185 <= block_map_nx_V_q0;
        ny_V_reg_190 <= block_map_ny_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_145 <= grp_fu_117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_150 <= grp_fu_124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_155 <= grp_fu_131_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state2)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_160 <= grp_fu_138_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        ap_return = grp_Find_channel_fu_97_ap_return;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        block_map_nx_V_address0 = zext_ln534_fu_165_p1;
    end else if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state3)))) begin
        block_map_nx_V_address0 = 9'd0;
    end else begin
        block_map_nx_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        block_map_nx_V_ce0 = 1'b1;
    end else if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state3)))) begin
        block_map_nx_V_ce0 = 1'b0;
    end else begin
        block_map_nx_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        block_map_ny_V_address0 = zext_ln534_fu_165_p1;
    end else if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state3)))) begin
        block_map_ny_V_address0 = 9'd0;
    end else begin
        block_map_ny_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        block_map_ny_V_ce0 = 1'b1;
    end else if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state3)))) begin
        block_map_ny_V_ce0 = 1'b0;
    end else begin
        block_map_ny_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_Find_channel_fu_97_nx = reg_155;
    end else if ((((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_Find_channel_fu_97_nx = reg_150;
    end else if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_Find_channel_fu_97_nx = nx_V_reg_185;
    end else begin
        grp_Find_channel_fu_97_nx = 'bx;
    end
end

always @ (*) begin
    if ((((pos_r == 3'd1) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd2) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_Find_channel_fu_97_ny = reg_160;
    end else if ((((pos_r == 3'd4) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_Find_channel_fu_97_ny = ny_V_reg_190;
    end else if ((((pos_r == 3'd7) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd5) & (1'b1 == ap_CS_fsm_state3)) | ((pos_r == 3'd6) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_Find_channel_fu_97_ny = reg_145;
    end else begin
        grp_Find_channel_fu_97_ny = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3_on_subcall_done = (((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd1)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd2)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd4)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd0)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd3)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd7)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd5)) | ((grp_Find_channel_fu_97_ap_done == 1'b0) & (pos_r == 3'd6)));
end

assign grp_Find_channel_fu_97_ap_start = grp_Find_channel_fu_97_ap_start_reg;

assign grp_fu_117_p2 = (block_map_ny_V_q0 + 4'd1);

assign grp_fu_124_p2 = ($signed(block_map_nx_V_q0) + $signed(5'd31));

assign grp_fu_131_p2 = (block_map_nx_V_q0 + 5'd1);

assign grp_fu_138_p2 = ($signed(block_map_ny_V_q0) + $signed(4'd15));

assign zext_ln534_fu_165_p1 = ch;

endmodule //hcal_cluster_hls_Find_nearby
